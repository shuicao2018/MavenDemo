<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
        <!--属性占位文件引入，可以通过${属性名}获得属性文件中的内容-->
    <context:property-placeholder location="classpath:db.properties"/>
        
	<!--1定义一个jdbc数据源，创建一个驱动管理数据源的bean -->
	<bean id="jdbcDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://169.254.213.200:3306/Test?useSSL=false" />
		<property name="username" value="xuc" />
		<property name="password" value="xc" />
	</bean>
	<!--2创建一个sql会话工厂bean，指定数据源 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 1指定数据源 -->
		<property name="dataSource" ref="jdbcDataSource" />
		<!-- 2类型别名包，默认引入com.zhangguo.Spring61.entities下的所有类 -->
		<property name="typeAliasesPackage"
			value="com.zhangguo.Spring61.entities"></property>
		<!-- 3指定sql映射xml文件的路径 -->
		<property name="mapperLocations"
			value="classpath:com/xuchao/bookmanager01/mapper/*Mapper.xml"></property>
	</bean>

	<!-- 通过扫描形式批量生成mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.xuchao.bookmanager01.mapper"></property>
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory"></property>
	</bean>


	<bean id="bookTypeSer"
		class="com.xuchao.bookmanager01.service.BookTypeService">
		<property name="daoBookType" ref="bookTypeMapper"></property>
	</bean>


	<context:component-scan
		base-package="com.xuchao">
	</context:component-scan>
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>


</beans>